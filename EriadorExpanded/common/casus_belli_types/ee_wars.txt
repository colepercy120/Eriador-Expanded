#######################
## LOTR WARS AND CBs ##
#######################





### Elven CBs ###



elven_homelands_kingdom_conquest_cb = {
	group = conquest

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	attacker_score_from_occupation_scale = 150
	attacker_score_from_battles_scale = 150
	defender_score_from_battles_scale = 150

	allowed_for_character = {
		is_elf = yes
		scope:attacker = {
			NOR = {
				has_culture = culture:wastelands
				AND = {
			        exists = primary_title.empire
			        primary_title.empire = title:e_valinor
		        }
			}
		}
		has_character_flag = rageagainstlight_war
	}

	allowed_for_character_display_regardless = {
		trigger_if = {
			limit = {
				culture = {
					has_cultural_parameter = cb_lower_prestige_level_requirement
				}
			}
			prestige_level >= 2
		}
		trigger_else = {
			prestige_level >= 3
		}
	}

	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
				has_culture = culture:wastelands
			}
		}
		scope:defender = {
			NOT = { has_culture = culture:wastelands }
			NOT = { is_elf = yes }
		}
		# The Necromancer is hidden
		NOT = { has_character_flag = unknown_sauron_flag } # LOTR
	}
	
	allowed_against_character_display_regardless = {}
	
	target_titles = all
	target_title_tier = kingdom
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_can_target_all_titles = {
		can_use_viking_invasion_cbs_trigger = yes
	}

	ai_score_mult = {
		value = viking_conquest_ai_score_value

		# LotR - Protectorates are much less aggressive
		add = {
			if = {
				limit = {
					scope:attacker = {
						any_tributary = { 
							this = scope:defender
							has_subject_contract_group = tributary_protectorate
						}
					}
				}
				add = -1000
			}
		}

		# LotR - Non-Evil faith characters leave poor Radagast alone! 
		add = {
			if = {
				limit = {
					scope:attacker = { faith_is_evil = no }
					scope:defender.culture = culture:istari
				}
				add = -1000
			}
			if = {
				limit = {
					scope:attacker = {
						faith_is_evil = no
						culture = culture:lasgalendrim 
						
					}
					scope:defender = {
						OR = {
							culture = { has_cultural_pillar = heritage_northron }
							culture = { has_cultural_pillar = heritage_hadorim }
						}
						faith_is_evil = no
					}
					#NOT = {
                    #    is_target_in_global_variable_list = { # Triggered by 'Consolidate Lagalen' Decision
                    #    name = unavailable_war_restrictions
                    #    target = flag:consolidate_lasgalen
                    #    }
                    #}
					current_year < 7058 #25 year grace period for woodmen so thranduil expands his kingdom west first
				}
				add = -1000
			}
			if = {
				limit = {
					current_year < 7038	#5 year grace period for any rulers foolish enough to border elves
				}
				add = -1000
			}
		}

		#LotR
		multiply = elf_target_ai_score_value
	}

	valid_to_start = {
		scope:target = {
			any_in_de_jure_hierarchy = {
				tier = tier_county
				neighboring_county_or_viking_conquest_trigger = { CHARACTER = root }
				has_county_modifier = elven_homeland_county_modifier
			}
		}
	}

	should_invalidate = {
		OR = {
			NOT = {
				any_in_list = {
					list = target_titles
					any_in_de_jure_hierarchy = {
						tier = tier_county
						holder = {
							target_is_same_character_or_above = scope:defender
						}
					}
				}
			}
			scope:attacker = {
				has_culture = culture:wastelands
			}
			scope:defender = {
				has_culture = culture:wastelands
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	cost = {
		piety = {
			add = common_cb_impious_piety_cost
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = massive_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}
			if = {
				limit = {
					scope:attacker = { government_has_flag = government_is_tribal }
				}
				multiply = {
					value = 0.5
					desc = CB_TRIBAL_COST
				}
			}
			multiply = common_cb_piety_cost_multiplier
			multiply = 2
		}
		prestige = {
			value = 0
			if = {
				limit = {
					NOT = { scope:defender.faith = scope:attacker.faith }
				}
				add = {
					value = massive_prestige_value
					desc = CB_COST_DIFFERENT_FAITH
				}
			}
			multiply = common_cb_prestige_cost_multiplier
			multiply = 2
			if = {
				limit = {
					scope:attacker.house = {
						OR = {
							has_house_modifier = fp2_struggle_hostility_house_culture_modifier 
							has_house_modifier = fp2_struggle_hostility_house_combined_modifier
						}
					}
					any_in_global_list = {
						variable = fp2_struggle_ending_culture_list
						this = scope:attacker.culture
					}
					any_in_global_list = {
						variable = fp2_struggle_ending_culture_list
						this = scope:defender.culture
					}
				}
				divide = {
					value = 2
					desc = CB_COST_FP2_STRUGGLE_HOSTILITY_CULTURE_DISCOUNT
				}
			}
			if = {
				limit = {
					has_global_variable = fp2_struggle_compromise_ending
					any_in_global_list = {
						variable = fp2_struggle_ending_culture_list
						this = scope:attacker.culture
					}
					any_in_global_list = {
						variable = fp2_struggle_ending_culture_list
						this = scope:defender.culture
					}
				}
				multiply = {
					value = 2
					desc = CB_COST_FP2_STRUGGLE_COMPROMISE_MULTIPLIER
				}
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		if = {
			limit = { scope:attacker = { has_variable = war_for_eregion } }
			scope:attacker = { 
				remove_variable = war_for_eregion
				remove_variable = no_return_event
			}
			scope:attacker = { trigger_event = maglor_event_chain.0023 }
		}
		else = {
			# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
			every_in_list = {
				list = target_titles
				custom_tooltip = CONQUEST_CB_TITLE

				save_scope_as = target_title # For the vassalization trigger.

				# Compile a list of all counties in the kingdom we will take from the defender.
				every_in_de_jure_hierarchy = {
					continue = {
						tier > tier_county
					}
					limit = {
						tier = tier_county
						
						has_county_modifier = elven_homeland_county_modifier

						# Current holder must be a (sub)vassal of the defender (no poaching titles from 3rd parties!)
						exists = holder
						holder = {
							OR = {
								this = scope:defender
								target_is_liege_or_above = scope:defender
							}
						}
						title_province ?= { 
							NOR = {
								has_holding_type = settlement_holding
								has_holding_type = wastelands_holding
							}
						}
					}
					add_to_list = titles_taken
				}
			}
	
			every_in_list = {
				list = titles_taken
				change_title_holder = {
					holder = scope:attacker
					change = scope:change
					take_baronies = yes
				}
			}
	
			resolve_title_and_vassal_change = scope:change
	
			scope:attacker = {
				if = {	#juke note: this is bad code, make better in the future
					limit = {
						is_ai = yes
						is_elf = yes
						highest_held_title_tier > tier_county
					}
					every_in_list = {
						list = target_titles
						limit = {
							title_province ?= { 
								NOR = { 
									has_holding_type = elven_holding
									has_holding_type = settlement_holding
									has_holding_type = wastelands_holding
								}
							}
						}
						save_scope_as = reclaimed_title
						create_character = {
							employer = scope:attacker
							#gender = male
							gender_female_chance = {	#gender now depends on faith
								if = {
									limit = { scope:attacker.faith = { has_doctrine = doctrine_gender_male_dominated } }
									add = 0
								}
								else_if = {
									limit = { scope:attacker.faith = { has_doctrine = doctrine_gender_male_orientated } }
									add = 25
								}
								else_if = {
									limit = { scope:attacker.faith = { has_doctrine = doctrine_gender_female_orientated } }
									add = 75
								}
								
								else_if = {
									limit = { scope:attacker.faith = { has_doctrine = doctrine_gender_female_dominated } }
									add = 100
								}
								else = {
									add = 50
								}
							}
							culture = scope:reclaimed_title.culture
							faith = scope:attacker.faith
							save_scope_as = new_holder
						}
						create_title_and_vassal_change = { # Define type of title change as a granting of the title
							type = granted
							save_scope_as = title_change
							add_claim_on_loss = no
						}
						scope:reclaimed_title = {
							change_title_holder = {
								holder = scope:new_holder
								change = scope:title_change
							}
						}
						resolve_title_and_vassal_change = scope:title_change
					}
				}
			}
		}


		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		if = { # Warning that only counties are changing hands
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_duchy }
				save_scope_as = de_jure_target
			}
			if = { # LotR - reordered to clean up errorlog
				limit = {
					any_in_list = {
						list = target_titles
						tier = tier_duchy
						holder = scope:defender
					}
				}
				if = {
					limit = {
						scope:defender = {
							any_held_title = {
								tier = tier_county
								NOT = { target_is_de_jure_liege_or_above = scope:de_jure_target }
							}
						}
					}
					custom_tooltip = conquest_title_not_transferred_tt
				}
				else = { custom_tooltip = conquest_title_destroyed_tt }
			}
			else = {
				if = {
					limit = {
						any_in_list = {
							list = target_titles
							tier = tier_duchy
							is_title_created = yes
						}
					}
					custom_tooltip = conquest_title_usurp_tt
				}
				else = { custom_tooltip = conquest_title_create_tt }
			}
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not impactful as the scale are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}


		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "ELVEN_HOMELANDS_KINGDOM_CONQUEST_WAR_NAME"
	war_name_base = "CONQUEST_WAR_NAME_BASE"
	cb_name = "ELVEN_HOMELANDS_KINGDOM_CONQUEST_CB_NAME"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8
	
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
}



vanquish_darkness_kingdom_cb = {
	group = conquest

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }
	#ticking_war_score_targets_entire_realm = yes

	allowed_for_character = {
		OR = {
			is_elf = yes
			is_istari = yes 
		}
		NOR = {
			has_culture = culture:wastelands
			is_in_valinor = yes
			faith_is_evil = yes
		}
		has_character_flag = rageagainstlight_war
	}

	allowed_for_character_display_regardless = {
		trigger_if = {
			limit = {
				culture = {
					has_cultural_parameter = cb_lower_piety_level_requirement
				}
			}
			piety_level >= 1
		}
		trigger_else = {
			piety_level >= 2
		}
	}

	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
				has_culture = culture:wastelands
			}
		}
		scope:defender = {
			NOT = { has_culture = culture:wastelands }
			NOT = { has_character_flag = unknown_sauron_flag }
			faith_is_evil = yes
		}
	}
	
	allowed_against_character_display_regardless = {}
	
	target_titles = all
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_score_mult = {
		value = 1
		# Increase odds if the character is a vassal with Ghazi Contract
		add = {
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_cheaper_religious_war
					}
				}
				add = 1
			}
		}
		# Holy War are limited to connected neighbour to limit big empire expansions over weak realms.
		add = {
			if = {
				limit = {  religious_war_vassals_constraints = yes }
				add = -1000
			}
		}

		# AI in struggles act insularly for wars that don't have a familial or legal basis.
		multiply = struggle_wars_prioritise_struggle_targets_value

		# LotR - Sauron and Nazgul should not target eachother
		add = {
			if = {
				limit = {
					OR = {
						AND = {
							scope:attacker = { is_sauron = yes }
							scope:defender = { has_trait = nazgul }
						}
						AND = {
							scope:defender = { is_sauron = yes }
							scope:attacker = { has_trait = nazgul }
						}
					}
				}
				add = -1000
			}
		}

		# LotR - Non-Evil faith characters leave poor Radagast alone! 
		add = {
			if = {
				limit = {
					scope:attacker = { faith_is_evil = no }
					scope:defender.culture = culture:istari
				}
				add = -1000
			}
		}

		# LotR - Protectorates are much less aggressive
		add = {
			if = {
				limit = {
					scope:attacker = {
						any_tributary = { 
							this = scope:defender
							has_subject_contract_group = tributary_protectorate
						}
					}
				}
				add = -1000
			}
		}

		#LotR
		multiply = elf_target_ai_score_value
	}

	valid_to_start = {
#		dwarf_and_goblin_underground_kingdom_cb_trigger = yes
		scope:target = {
			tier = tier_kingdom
		}
		# Filter for struggles
		trigger_if = {
			limit = {
				scope:defender = {
					any_character_struggle = {
						involvement = involved
					}
				}
			}
			are_holy_wars_disabled_in_struggle_phase_trigger = yes
			are_holy_wars_disabled_by_struggle_conciliation_trigger = no # Disabled against other involved faiths in FP2 Conciliation ending
		}
	}

	should_invalidate = {
		OR = {
			scope:defender = { faith_is_evil = no }
			NOT = {
				any_in_list = {
					list = target_titles
					any_in_de_jure_hierarchy = {
						tier = tier_county
						holder = {
							OR = {
								this = scope:defender
								target_is_liege_or_above = scope:defender
							}
						}
					}
				}
			}
			scope:attacker = {
				has_culture = culture:wastelands
			}
			scope:defender = {
				has_culture = culture:wastelands
			}
		}
	}

	on_invalidated_desc = vanquish_darkness_war_invalidated_message
	on_invalidated = {}

	cost = {
		piety = {
			add = {
				value = 800
				desc = CB_BASE_COST
			}
			multiply = common_cb_piety_cost_multiplier
			multiply = holy_war_cb_piety_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
		if = {
			limit = { scope:attacker = { is_elf = yes } }
			scope:defender = { # Event offering defender to convert
				trigger_event = { id = elven_racial.0200 days = 1 }
			}
		}
		else = {
			scope:defender = { trigger_event = { id = elven_racial.0201 days = 1 } }
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = vanquish_darkness_county_cb_victory_desc_attacker
			}
			desc = vanquish_darkness_county_cb_victory_desc
		}
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }
		
		every_in_list = {
			list = target_titles
			vanquish_darkness_generate_new_holder_culture_and_faith = yes
			save_scope_as = target_kingdom
			
			scope:defender = { #If they do not hold any counties outside this kingdom, destroy all higher tier titles
				if = {
					limit = {
						any_held_title = {
							tier = tier_county
							NOT = { kingdom = { is_in_list = target_titles } }
							count = 0
						}
					}
					every_held_title = {
						limit = {
							tier > tier_kingdom
						}
						scope:defender = { destroy_title = prev }
					}
				}
			}

			create_character = { # Create a new character to hold the title
				employer = scope:attacker
				#location = scope:attacker.capital_province
				culture = scope:holder_culture
				faith = scope:holder_faith
				gender_female_chance = holder_faith_dominant_gender_female_chance
				save_scope_as = new_holder

				after_creation = {
					lotr_character_template_age_traits_effect = { #LOTR trait/lifespan fixes
						MAX = middle_age
						MIN = young_age
					}
				}		
			}

			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = yes
			}

			change_title_holder = {
				holder = scope:new_holder
				change = scope:change
			}

			hidden_effect = {
				scope:new_holder ?= {
					add_gold = 500
					lotr_character_template_age_traits_effect = { #LOTR trait/lifespan fixes
						MAX = middle_age
						MIN = young_age
					}
				}
			}

			every_county = {
				limit = {
					kingdom = scope:target_kingdom
					holder = { 
						OR = {
							any_liege_or_above = { this = scope:defender }
							this = scope:defender
						}
					}
				}
				# Specific County Rework
				if = {
					limit = { culture = scope:holder_culture }
					set_county_faith = scope:holder_faith
				}
				else = {
					vanquish_darkness_convert_specific_county = yes
				}
				if = {
					limit = { culture = { is_orc_culture = yes } }
					set_county_culture = scope:holder_culture
				}
				change_title_holder = {
					holder = scope:new_holder
					change = scope:change
				}
				change_title_holder = { #Does nothing but highlight provinces in war dec window
					holder = scope:attacker
					change = scope:change
				}
				hidden_effect = { change_county_control = 60 } #Give them some control to help them out
			}

			resolve_title_and_vassal_change = scope:change
		
			scope:new_holder ?= {
				every_vassal = {
					limit = { NOT = { faith_is_good = yes } }
					create_title_and_vassal_change = {
						type = independency
						save_scope_as = change
						add_claim_on_loss = no
					}
					becomes_independent = { change = scope:change }
					resolve_title_and_vassal_change = scope:change
				}
			}
			
			#Give them some gold to help them out
			scope:new_holder = {
				hidden_effect = { add_gold = 200 }
			}

			#Add a truce between the new holder and the defender
			hidden_effect = {
				scope:new_holder = {
					add_truce_both_ways = {
						character = scope:defender
						days = standard_truce_duration_days
						war = root.war
						result = victory
					}
				}
				if = {
					limit = { 
						scope:attacker = { government_has_flag = government_is_elven }
					}
					scope:new_holder ?= {
						start_tributary_interaction_effect = {
							TRIBUTARY = scope:new_holder
							SUZERAIN = scope:attacker
						}
					}
				}
			}

			if = {
				limit = {
					scope:new_holder ?= { is_independent_ruler = no }
				}
				scope:new_holder = {
					create_title_and_vassal_change = {
						type = independency
						save_scope_as = change
						add_claim_on_loss = no
					}
					becomes_independent = { change = scope:change }
					resolve_title_and_vassal_change = scope:change
				}
			}
			every_county = {
				limit = {
					kingdom = { is_in_list = target_titles }
					holder = scope:new_holder
				}
				generate_coa = yes
			}
			generate_coa = yes
		}

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = minor_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = religious_cb_ally_prestige_kingdom
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Piety Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_piety_experience = {
					add = religious_cb_piety_gain_kingdom
					if = {
						limit = {
							scope:attacker.faith = {
								has_doctrine_parameter = bonus_holy_war_piety_active
							}
						}
						multiply = 1.5
					}
				}
			}
		}

		scope:attacker.faith = {
			change_fervor = {
				value = -2
				desc = fervor_loss_religious_war
			}
		}
		scope:defender.faith = {
			change_fervor = {
				value = 4
				desc = fervor_gain_religious_war
			}
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender # Not important as the scales are identical
			FAME_BASE = religious_cb_ally_prestige_kingdom
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_piety = religious_cb_piety_white_peace
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		scope:attacker = { show_pow_release_message_effect = yes }

		scope:attacker = {
			every_vassal = {
				limit = { faith = scope:attacker.faith }
				custom = all_attackers_vassals_same_faith
				add_opinion = {
					modifier = liege_lost_declared_religious_war
					target = scope:attacker
				}
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = religious_cb_ally_prestige_kingdom
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# piety change
		every_in_list = {
			list = target_titles

			scope:defender = {
				add_piety = {
					add = religious_cb_piety_gain_kingdom
					if = {
						limit = {
							scope:defender.faith = {
								has_doctrine_parameter = bonus_holy_war_piety_active
							}
						}
						multiply = 1.5
					}
				}
			}

			scope:attacker = {
				if = {
					limit = {
						monthly_character_income > 0
					}
					pay_short_term_income = {
						years = 3
						target = scope:defender
					}
				}
				else = {
					pay_short_term_gold = {
						target = scope:defender
						gold = medium_gold_value
					}
				}
			}
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "VANQUISH_DARKNESS_KINGDOM_WAR_NAME"
	war_name_base = "CONQUEST_WAR_NAME_BASE"
	cb_name = "VANQUISH_DARKNESS_KINGDOM_CB_NAME"

	interface_priority = 79

	is_holy_war = yes
	defender_faith_can_join = yes

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_ai_diplo_distance_to_title = 500
}

